// Mocks generated by Mockito 5.4.2 from annotations
// in picture_of_the_day/test/data/repository/local_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:picture_of_the_day/domain/entities/picture_entity.dart' as _i5;
import 'package:shared_preferences/shared_preferences.dart' as _i2;

import 'local_repository_impl_test.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSharedPreferences_0 extends _i1.SmartFake
    implements _i2.SharedPreferences {
  _FakeSharedPreferences_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MockLocalRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMockLocalRepository extends _i1.Mock
    implements _i3.MockLocalRepository {
  @override
  _i2.SharedPreferences get sharedPreferences => (super.noSuchMethod(
        Invocation.getter(#sharedPreferences),
        returnValue: _FakeSharedPreferences_0(
          this,
          Invocation.getter(#sharedPreferences),
        ),
        returnValueForMissingStub: _FakeSharedPreferences_0(
          this,
          Invocation.getter(#sharedPreferences),
        ),
      ) as _i2.SharedPreferences);
  @override
  _i4.Future<_i5.PictureEntity?> retrieveLastestImage() => (super.noSuchMethod(
        Invocation.method(
          #retrieveLastestImage,
          [],
        ),
        returnValue: _i4.Future<_i5.PictureEntity?>.value(),
        returnValueForMissingStub: _i4.Future<_i5.PictureEntity?>.value(),
      ) as _i4.Future<_i5.PictureEntity?>);
  @override
  _i4.Future<bool> storeLastestImage(_i5.PictureEntity? picture) =>
      (super.noSuchMethod(
        Invocation.method(
          #storeLastestImage,
          [picture],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
